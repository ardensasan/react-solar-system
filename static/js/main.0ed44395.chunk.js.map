{"version":3,"sources":["SolarSystem/components/Planet/index.tsx","SolarSystem/components/Orbit/index.tsx","common/planets.ts","assets/maps/map/mercury.jpg","assets/maps/map/venus.jpg","assets/maps/map/earth.jpg","assets/maps/map/mars.jpg","assets/maps/map/jupiter.jpg","assets/maps/map/saturn.jpg","assets/maps/map/uranus.jpg","assets/maps/map/neptune.jpg","common/sun.ts","assets/maps/map/sun.jpg","SolarSystem/components/Sun/index.tsx","SolarSystem/index.tsx","assets/loading_icon.jpg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Planet","radius","distanceFromSun","map","revolution","rotation","meshRef","useRef","mapTexture","useTexture","angle","increase","useFrame","current","mesh","position","z","Math","cos","x","sin","rotateY","ref","args","Orbit","color","side","DoubleSide","planetList","name","SunProps","Sun","CanvasConfig","useThree","state","gl","scene","background","Color","setSize","window","innerWidth","innerHeight","SolarSystem","camera","OrbitControls","planet","index","properties","App","className","fallback","src","loading_icon","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ed44395.chunk.js","sourcesContent":["import { useTexture } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { useRef } from \"react\";\nimport { FC } from \"react\";\nimport { Mesh } from \"three\";\nimport { Props } from \"./types\";\nconst Planet: FC<Props> = ({\n  radius,\n  distanceFromSun,\n  map,\n  revolution,\n  rotation,\n}) => {\n  const meshRef = useRef<Mesh>(null);\n  const mapTexture = useTexture(map);\n  let angle = 0; //angle in radians\n  const increase = 6.28319 / revolution;\n  useFrame(() => {\n    angle += increase / 1000;\n    if (angle >= 6.28319) angle = 0;\n    if (meshRef.current) {\n      const { current: mesh } = meshRef;\n      mesh.position.z = Math.cos(angle) * distanceFromSun;\n      mesh.position.x = Math.sin(angle) * distanceFromSun;\n      mesh.rotateY(6.28319 / rotation / 1000);\n    }\n  });\n\n  return (\n    <mesh position={[0, 0, distanceFromSun]} ref={meshRef}>\n      <sphereGeometry args={[radius]} />\n      <meshStandardMaterial map={mapTexture} />\n    </mesh>\n  );\n};\n\nexport default Planet;\n","import { FC } from \"react\";\nimport { DoubleSide } from \"three\";\nimport { Props } from \"./types\";\n\nconst Orbit:FC<Props> = ({radius}) =>{\n    //rotate the ring 90 degrees in the x axis\n    return <mesh rotation={[1.57,0,0]}>\n        <ringGeometry args={[radius-0.01, radius, radius*10, radius*10]}/>\n        <meshBasicMaterial color=\"white\" side={DoubleSide}/>\n    </mesh>\n}\n\nexport default Orbit;","import mercuryMap from \"../assets/maps/map/mercury.jpg\";\nimport venusMap from \"../assets/maps/map/venus.jpg\";\nimport earthMap from \"../assets/maps/map/earth.jpg\";\nimport marsMap from \"../assets/maps/map/mars.jpg\";\nimport jupiterMap from \"../assets/maps/map/jupiter.jpg\";\nimport saturnMap from \"../assets/maps/map/saturn.jpg\";\nimport uranusMap from \"../assets/maps/map/uranus.jpg\";\nimport neptuneMap from \"../assets/maps/map/neptune.jpg\";\nimport { PlanetProperties } from \"./types\";\n\n//revolution and rotation data from https://www.exploratorium.edu/ronh/age/\n//planet sizes based on https://solarsystem.nasa.gov/resources/686/solar-system-sizes/\nexport const planetList: Array<PlanetProperties> = [\n  {\n    name: \"Mercury\",\n    radius: 0.0244,\n    distanceFromSun: 1.1,\n    revolution: 47.9,\n    rotation: 58.6,\n    map: mercuryMap,\n  },\n  {\n    name: \"Venus\",\n    radius: 0.06052,\n    distanceFromSun: 12.2,\n    revolution: 224.7,\n    rotation: 243,\n    map: venusMap,\n  },\n  {\n    name: \"Earth\",\n    radius: 0.6371,\n    distanceFromSun: 13.9,\n    revolution: 365.26,\n    rotation: 1,\n    map: earthMap,\n  },\n  {\n    name: \"Mars\",\n    radius: 0.393,\n    distanceFromSun: 15.3,\n    revolution: 1.88,\n    rotation: 1.03,\n    map: marsMap,\n  },\n  {\n    name: \"Jupiter\",\n    radius: 3.6911,\n    distanceFromSun: 20.2,\n    revolution: 11.86,\n    rotation: 0.41,\n    map: jupiterMap,\n  },\n  {\n    name: \"Saturn\",\n    radius: 2.4232,\n    distanceFromSun: 27.0,\n    revolution: 0.45,\n    rotation: 29.46,\n    map: saturnMap,\n  },\n  {\n    name: \"Uranus\",\n    radius: 1.5362,\n    distanceFromSun: 31.7,\n    revolution: 0.72,\n    rotation: 84.01,\n    map: uranusMap,\n  },\n  {\n    name: \"Neptune\",\n    radius: 1.4622,\n    distanceFromSun: 35.4,\n    revolution: 0.67,\n    rotation: 164.79,\n    map: neptuneMap,\n  },\n];\n","export default __webpack_public_path__ + \"static/media/mercury.8f80953b.jpg\";","export default __webpack_public_path__ + \"static/media/venus.4b03f2d6.jpg\";","export default __webpack_public_path__ + \"static/media/earth.981cc3e3.jpg\";","export default __webpack_public_path__ + \"static/media/mars.33960f5a.jpg\";","export default __webpack_public_path__ + \"static/media/jupiter.3e84533e.jpg\";","export default __webpack_public_path__ + \"static/media/saturn.3b074d8e.jpg\";","export default __webpack_public_path__ + \"static/media/uranus.428ad3f9.jpg\";","export default __webpack_public_path__ + \"static/media/neptune.6dd11266.jpg\";","import sunMap from '../assets/maps/map/sun.jpg'\n\nexport const SunProps = {\n    name: \"Sun\",\n    radius: 10,\n    map:sunMap,\n}\n","export default __webpack_public_path__ + \"static/media/sun.4b569137.jpg\";","import { useTexture } from \"@react-three/drei\";\nimport { FC } from \"react\";\nimport { SunProps } from \"../../../common/sun\";\nconst Sun: FC<{}> = () => {\n  const { radius, map } = SunProps;\n  const mapTexture = useTexture(map);\n  return (\n    <mesh>\n      <sphereGeometry args={[radius, radius * 10, radius * 10]} />\n      <meshBasicMaterial map={mapTexture}/>\n    </mesh>\n  );\n};\n\nexport default Sun;\n","import { Canvas, useThree } from \"@react-three/fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport Planet from \"./components/Planet\";\nimport Orbit from \"./components/Orbit\";\nimport { planetList } from \"../common/planets\";\nimport { Color } from \"three\";\nimport { Fragment } from \"react\";\nimport { PlanetProperties } from \"./types\";\nimport Sun from \"./components/Sun\";\nconst CanvasConfig = () => {\n  const { gl, scene } = useThree((state) => state);\n  scene.background = new Color(\"black\");\n  gl.setSize(window.innerWidth, window.innerHeight);\n  return null;\n};\n\nconst SolarSystem = () => {\n  return (\n    <Canvas camera={{ position: [0, 40, 20] }}>\n      <CanvasConfig />\n      <OrbitControls />\n      <pointLight />\n      <Sun />\n      {planetList.map((planet: PlanetProperties, index: number) => {\n        const { ...properties } = planet;\n        return (\n          <Fragment key={index}>\n            <Planet {...properties} />\n            <Orbit radius={properties.distanceFromSun} />\n          </Fragment>\n        );\n      })}\n    </Canvas>\n  );\n};\n\nexport default SolarSystem;","export default __webpack_public_path__ + \"static/media/loading_icon.011aaec0.jpg\";","import { Suspense } from \"react\";\nimport SolarSystem from \"./SolarSystem\";\nimport loading_icon from \"./assets/loading_icon.jpg\";\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Suspense fallback={<img src={loading_icon} alt=\"loading\" />}>\n        <SolarSystem />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}